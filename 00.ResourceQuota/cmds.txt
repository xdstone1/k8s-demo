kubectl create namespace quota-mem-cpu-example

kubectl create -f mem-cpu-demo.yaml -n quota-mem-cpu-example
                                                                                                                                                            
kubectl get resourcequota mem-cpu-demo -n quota-mem-cpu-example -o yaml

#after set resource quota, we can create a pod under this namespace to consume some
kubectl create -f pod.yaml -n quota-mem-cpu-example

# you will see the output is different with some resource consumed
kubectl get resourcequota mem-cpu-demo -n quota-mem-cpu-example -o yaml


# lets create a new pod and consume more
kubectl create -f pod-2.yaml -n  quota-mem-cpu-example

# it will report some error since the quota is reached

# we can also use resource quota to limit numbers of objects, lets create a new object
kubectl create namespace quota-object-example

kubectl create -f quota-objects.yaml -n quota-object-example
kubectl get resourcequota object-quota-demo -n quota-object-example -o yaml

# we create one pvc to consume the quota once
kubectl create -f pvc-quota.yaml -n quota-object-example 
kubectl get pvc -n quota-object-example
kubectl get resourcequota object-quota-demo -n quota-object-example

# we create another pvc to consume more, will fail
kubectl create -f pvc-quota-2.yaml -n quota-object-example



